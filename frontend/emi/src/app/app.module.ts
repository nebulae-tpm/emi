import { NgModule, APP_INITIALIZER } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { HttpClientModule } from '@angular/common/http';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { RouterModule, Routes } from '@angular/router';
import 'hammerjs';
import { SharedModule } from './core/modules/shared.module';
import { AppComponent } from './app.component';
import { FuseMainModule } from './main/main.module';
import { FuseSplashScreenService } from './core/services/splash-screen.service';
import { FuseConfigService } from './core/services/config.service';
import { FuseNavigationService } from './core/components/navigation/navigation.service';
import { TranslateModule } from '@ngx-translate/core';
import { keycloakInitializer } from './auth/keycloakInitializer';
import { KeycloakService, KeycloakAngularModule } from 'keycloak-angular';
import { AppAuthGuard } from './auth/appAuthGuard.service';
import { ApolloModule, Apollo } from 'apollo-angular';
import { HttpLinkModule, HttpLink } from 'apollo-angular-link-http';
import { CustomMatPaginatorIntl } from './core/custom-mat-paginator-intl/custom-mat-paginator-intl';
import { GatewayService } from './api/gateway.service';
import { MatPaginatorIntl } from '@angular/material';
import { ServiceWorkerModule } from '@angular/service-worker';
import { environment } from '../environments/environment';

/* do not edit the line below: autogenerated code */
const appRoutes: Routes = [];

@NgModule({
  declarations: [AppComponent],
  imports: [
    BrowserModule,
    HttpClientModule,
    BrowserAnimationsModule,
    RouterModule.forRoot(appRoutes),
    SharedModule,
    TranslateModule.forRoot(),
    FuseMainModule,
    KeycloakAngularModule,
    ApolloModule,
    HttpLinkModule,
    ServiceWorkerModule.register('/emi/ngsw-worker.js', { enabled: environment.production }),
  ],
  providers: [
    {
      provide: MatPaginatorIntl,
      useClass: CustomMatPaginatorIntl
    },
    FuseSplashScreenService,
    FuseConfigService,
    FuseNavigationService,
    AppAuthGuard,
    {
      provide: APP_INITIALIZER,
      useFactory: keycloakInitializer,
      multi: true,
      deps: [KeycloakService]
    },
    GatewayService,
  ],
  bootstrap: [AppComponent]
})
export class AppModule { }
